// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'underscore', 'config'], function(backbone, _, config) {
  var Collection, Model, View;
  View = (function(_super) {

    __extends(View, _super);

    function View() {
      return View.__super__.constructor.apply(this, arguments);
    }

    View.prototype.render = function(data) {
      return this.$el.html(this.template(data));
    };

    return View;

  })(backbone.View);
  Model = (function(_super) {

    __extends(Model, _super);

    function Model() {
      return Model.__super__.constructor.apply(this, arguments);
    }

    Model.prototype.url = function() {
      return config.api.host + Model.__super__.url.apply(this, arguments);
    };

    return Model;

  })(backbone.Model);
  Collection = (function(_super) {

    __extends(Collection, _super);

    function Collection() {
      return Collection.__super__.constructor.apply(this, arguments);
    }

    Collection.prototype.url = function() {
      var base;
      base = _.result(this, 'urlRoot');
      return config.api.host + base;
    };

    return Collection;

  })(backbone.Collection);
  return {
    Model: Model,
    View: View,
    Collection: Collection
  };
});
